//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Solution.UI.Web.MicrosoftEShipTo {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EShipTo_Binding", Namespace="urn:microsoft-dynamics-schemas/page/eshipto")]
    public partial class EShipTo_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EShipTo_Service() {
            this.Url = global::Solution.UI.Web.Properties.Settings.Default.Solution_UI_Web_MicrosoftEShipTo_EShipTo_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event CreateMultipleCompletedEventHandler CreateMultipleCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EShipTo")]
        public EShipTo Read(string Customer_No, string Code) {
            object[] results = this.Invoke("Read", new object[] {
                        Customer_No,
                        Code});
            return ((EShipTo)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string Customer_No, string Code) {
            this.ReadAsync(Customer_No, Code, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string Customer_No, string Code, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        Customer_No,
                        Code}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EShipTo")]
        public EShipTo ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((EShipTo)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public EShipTo[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] EShipTo_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((EShipTo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(EShipTo_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(EShipTo_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:Create", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="Create_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Create(ref EShipTo EShipTo) {
            object[] results = this.Invoke("Create", new object[] {
                        EShipTo});
            EShipTo = ((EShipTo)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(EShipTo EShipTo) {
            this.CreateAsync(EShipTo, null);
        }
        
        /// <remarks/>
        public void CreateAsync(EShipTo EShipTo, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        EShipTo}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:CreateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="CreateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref EShipTo[] EShipTo_List) {
            object[] results = this.Invoke("CreateMultiple", new object[] {
                        EShipTo_List});
            EShipTo_List = ((EShipTo[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(EShipTo[] EShipTo_List) {
            this.CreateMultipleAsync(EShipTo_List, null);
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(EShipTo[] EShipTo_List, object userState) {
            if ((this.CreateMultipleOperationCompleted == null)) {
                this.CreateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleOperationCompleted);
            }
            this.InvokeAsync("CreateMultiple", new object[] {
                        EShipTo_List}, this.CreateMultipleOperationCompleted, userState);
        }
        
        private void OnCreateMultipleOperationCompleted(object arg) {
            if ((this.CreateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleCompleted(this, new CreateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref EShipTo EShipTo) {
            object[] results = this.Invoke("Update", new object[] {
                        EShipTo});
            EShipTo = ((EShipTo)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(EShipTo EShipTo) {
            this.UpdateAsync(EShipTo, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(EShipTo EShipTo, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        EShipTo}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref EShipTo[] EShipTo_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        EShipTo_List});
            EShipTo_List = ((EShipTo[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(EShipTo[] EShipTo_List) {
            this.UpdateMultipleAsync(EShipTo_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(EShipTo[] EShipTo_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        EShipTo_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/eshipto:Delete", RequestNamespace="urn:microsoft-dynamics-schemas/page/eshipto", ResponseElementName="Delete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/eshipto", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_Result")]
        public bool Delete(string Key) {
            object[] results = this.Invoke("Delete", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key) {
            this.DeleteAsync(Key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/eshipto")]
    public partial class EShipTo {
        
        private string keyField;
        
        private string codeField;
        
        private string nameField;
        
        private string addressField;
        
        private string address_2Field;
        
        private string cityField;
        
        private string countyField;
        
        private string post_CodeField;
        
        private string country_Region_CodeField;
        
        private string phone_NoField;
        
        private string contactField;
        
        private string location_CodeField;
        
        private string shipment_Method_CodeField;
        
        private string shipping_Agent_CodeField;
        
        private string shipping_Agent_Service_CodeField;
        
        private string service_Zone_CodeField;
        
        private System.DateTime last_Date_ModifiedField;
        
        private bool last_Date_ModifiedFieldSpecified;
        
        private bool tax_LiableField;
        
        private bool tax_LiableFieldSpecified;
        
        private string tax_Area_CodeField;
        
        private string fax_NoField;
        
        private string e_MailField;
        
        private string home_PageField;
        
        private string customer_NoField;
        
        private string e_Ship_Agent_ServiceField;
        
        private bool residential_DeliveryField;
        
        private bool residential_DeliveryFieldSpecified;
        
        private bool blind_ShipmentField;
        
        private bool blind_ShipmentFieldSpecified;
        
        private bool double_Blind_ShipmentField;
        
        private bool double_Blind_ShipmentFieldSpecified;
        
        private string double_Blind_Ship_from_Cust_NoField;
        
        private string packing_Rule_CodeField;
        
        private string e_Mail_Rule_CodeField;
        
        private bool free_FreightField;
        
        private bool free_FreightFieldSpecified;
        
        private bool no_Free_Freight_Lines_on_OrderField;
        
        private bool no_Free_Freight_Lines_on_OrderFieldSpecified;
        
        private Shipping_Payment_Type shipping_Payment_TypeField;
        
        private bool shipping_Payment_TypeFieldSpecified;
        
        private Shipping_Insurance shipping_InsuranceField;
        
        private bool shipping_InsuranceFieldSpecified;
        
        private bool distribition_CenterField;
        
        private bool distribition_CenterFieldSpecified;
        
        private string dist_Center_Ship_to_CodeField;
        
        private string external_NoField;
        
        private System.DateTime effective_DateField;
        
        private bool effective_DateFieldSpecified;
        
        private System.DateTime open_DateField;
        
        private bool open_DateFieldSpecified;
        
        private System.DateTime close_DateField;
        
        private bool close_DateFieldSpecified;
        
        private System.DateTime change_DateField;
        
        private bool change_DateFieldSpecified;
        
        private string eDI_Internal_Doc_NoField;
        
        private string dist_Center_Ext_CodeField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Address_2 {
            get {
                return this.address_2Field;
            }
            set {
                this.address_2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Post_Code {
            get {
                return this.post_CodeField;
            }
            set {
                this.post_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country_Region_Code {
            get {
                return this.country_Region_CodeField;
            }
            set {
                this.country_Region_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Phone_No {
            get {
                return this.phone_NoField;
            }
            set {
                this.phone_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string Location_Code {
            get {
                return this.location_CodeField;
            }
            set {
                this.location_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shipment_Method_Code {
            get {
                return this.shipment_Method_CodeField;
            }
            set {
                this.shipment_Method_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shipping_Agent_Code {
            get {
                return this.shipping_Agent_CodeField;
            }
            set {
                this.shipping_Agent_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shipping_Agent_Service_Code {
            get {
                return this.shipping_Agent_Service_CodeField;
            }
            set {
                this.shipping_Agent_Service_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Service_Zone_Code {
            get {
                return this.service_Zone_CodeField;
            }
            set {
                this.service_Zone_CodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Last_Date_Modified {
            get {
                return this.last_Date_ModifiedField;
            }
            set {
                this.last_Date_ModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Last_Date_ModifiedSpecified {
            get {
                return this.last_Date_ModifiedFieldSpecified;
            }
            set {
                this.last_Date_ModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Tax_Liable {
            get {
                return this.tax_LiableField;
            }
            set {
                this.tax_LiableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Tax_LiableSpecified {
            get {
                return this.tax_LiableFieldSpecified;
            }
            set {
                this.tax_LiableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Tax_Area_Code {
            get {
                return this.tax_Area_CodeField;
            }
            set {
                this.tax_Area_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Fax_No {
            get {
                return this.fax_NoField;
            }
            set {
                this.fax_NoField = value;
            }
        }
        
        /// <remarks/>
        public string E_Mail {
            get {
                return this.e_MailField;
            }
            set {
                this.e_MailField = value;
            }
        }
        
        /// <remarks/>
        public string Home_Page {
            get {
                return this.home_PageField;
            }
            set {
                this.home_PageField = value;
            }
        }
        
        /// <remarks/>
        public string Customer_No {
            get {
                return this.customer_NoField;
            }
            set {
                this.customer_NoField = value;
            }
        }
        
        /// <remarks/>
        public string E_Ship_Agent_Service {
            get {
                return this.e_Ship_Agent_ServiceField;
            }
            set {
                this.e_Ship_Agent_ServiceField = value;
            }
        }
        
        /// <remarks/>
        public bool Residential_Delivery {
            get {
                return this.residential_DeliveryField;
            }
            set {
                this.residential_DeliveryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Residential_DeliverySpecified {
            get {
                return this.residential_DeliveryFieldSpecified;
            }
            set {
                this.residential_DeliveryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Blind_Shipment {
            get {
                return this.blind_ShipmentField;
            }
            set {
                this.blind_ShipmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Blind_ShipmentSpecified {
            get {
                return this.blind_ShipmentFieldSpecified;
            }
            set {
                this.blind_ShipmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Double_Blind_Shipment {
            get {
                return this.double_Blind_ShipmentField;
            }
            set {
                this.double_Blind_ShipmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Double_Blind_ShipmentSpecified {
            get {
                return this.double_Blind_ShipmentFieldSpecified;
            }
            set {
                this.double_Blind_ShipmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Double_Blind_Ship_from_Cust_No {
            get {
                return this.double_Blind_Ship_from_Cust_NoField;
            }
            set {
                this.double_Blind_Ship_from_Cust_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Packing_Rule_Code {
            get {
                return this.packing_Rule_CodeField;
            }
            set {
                this.packing_Rule_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string E_Mail_Rule_Code {
            get {
                return this.e_Mail_Rule_CodeField;
            }
            set {
                this.e_Mail_Rule_CodeField = value;
            }
        }
        
        /// <remarks/>
        public bool Free_Freight {
            get {
                return this.free_FreightField;
            }
            set {
                this.free_FreightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Free_FreightSpecified {
            get {
                return this.free_FreightFieldSpecified;
            }
            set {
                this.free_FreightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool No_Free_Freight_Lines_on_Order {
            get {
                return this.no_Free_Freight_Lines_on_OrderField;
            }
            set {
                this.no_Free_Freight_Lines_on_OrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool No_Free_Freight_Lines_on_OrderSpecified {
            get {
                return this.no_Free_Freight_Lines_on_OrderFieldSpecified;
            }
            set {
                this.no_Free_Freight_Lines_on_OrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Shipping_Payment_Type Shipping_Payment_Type {
            get {
                return this.shipping_Payment_TypeField;
            }
            set {
                this.shipping_Payment_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Shipping_Payment_TypeSpecified {
            get {
                return this.shipping_Payment_TypeFieldSpecified;
            }
            set {
                this.shipping_Payment_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Shipping_Insurance Shipping_Insurance {
            get {
                return this.shipping_InsuranceField;
            }
            set {
                this.shipping_InsuranceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Shipping_InsuranceSpecified {
            get {
                return this.shipping_InsuranceFieldSpecified;
            }
            set {
                this.shipping_InsuranceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Distribition_Center {
            get {
                return this.distribition_CenterField;
            }
            set {
                this.distribition_CenterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Distribition_CenterSpecified {
            get {
                return this.distribition_CenterFieldSpecified;
            }
            set {
                this.distribition_CenterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Dist_Center_Ship_to_Code {
            get {
                return this.dist_Center_Ship_to_CodeField;
            }
            set {
                this.dist_Center_Ship_to_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string External_No {
            get {
                return this.external_NoField;
            }
            set {
                this.external_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Effective_Date {
            get {
                return this.effective_DateField;
            }
            set {
                this.effective_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Effective_DateSpecified {
            get {
                return this.effective_DateFieldSpecified;
            }
            set {
                this.effective_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Open_Date {
            get {
                return this.open_DateField;
            }
            set {
                this.open_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Open_DateSpecified {
            get {
                return this.open_DateFieldSpecified;
            }
            set {
                this.open_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Close_Date {
            get {
                return this.close_DateField;
            }
            set {
                this.close_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Close_DateSpecified {
            get {
                return this.close_DateFieldSpecified;
            }
            set {
                this.close_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Change_Date {
            get {
                return this.change_DateField;
            }
            set {
                this.change_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Change_DateSpecified {
            get {
                return this.change_DateFieldSpecified;
            }
            set {
                this.change_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string EDI_Internal_Doc_No {
            get {
                return this.eDI_Internal_Doc_NoField;
            }
            set {
                this.eDI_Internal_Doc_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Dist_Center_Ext_Code {
            get {
                return this.dist_Center_Ext_CodeField;
            }
            set {
                this.dist_Center_Ext_CodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/eshipto")]
    public enum Shipping_Payment_Type {
        
        /// <remarks/>
        Prepaid,
        
        /// <remarks/>
        Third_Party,
        
        /// <remarks/>
        Freight_Collect,
        
        /// <remarks/>
        Consignee,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/eshipto")]
    public enum Shipping_Insurance {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Never,
        
        /// <remarks/>
        Always,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/eshipto")]
    public partial class EShipTo_Filter {
        
        private EShipTo_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public EShipTo_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/eshipto")]
    public enum EShipTo_Fields {
        
        /// <remarks/>
        Code,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        Address,
        
        /// <remarks/>
        Address_2,
        
        /// <remarks/>
        City,
        
        /// <remarks/>
        County,
        
        /// <remarks/>
        Post_Code,
        
        /// <remarks/>
        Country_Region_Code,
        
        /// <remarks/>
        Phone_No,
        
        /// <remarks/>
        Contact,
        
        /// <remarks/>
        Location_Code,
        
        /// <remarks/>
        Shipment_Method_Code,
        
        /// <remarks/>
        Shipping_Agent_Code,
        
        /// <remarks/>
        Shipping_Agent_Service_Code,
        
        /// <remarks/>
        Service_Zone_Code,
        
        /// <remarks/>
        Last_Date_Modified,
        
        /// <remarks/>
        Tax_Liable,
        
        /// <remarks/>
        Tax_Area_Code,
        
        /// <remarks/>
        Fax_No,
        
        /// <remarks/>
        E_Mail,
        
        /// <remarks/>
        Home_Page,
        
        /// <remarks/>
        Customer_No,
        
        /// <remarks/>
        E_Ship_Agent_Service,
        
        /// <remarks/>
        Residential_Delivery,
        
        /// <remarks/>
        Blind_Shipment,
        
        /// <remarks/>
        Double_Blind_Shipment,
        
        /// <remarks/>
        Double_Blind_Ship_from_Cust_No,
        
        /// <remarks/>
        Packing_Rule_Code,
        
        /// <remarks/>
        E_Mail_Rule_Code,
        
        /// <remarks/>
        Free_Freight,
        
        /// <remarks/>
        No_Free_Freight_Lines_on_Order,
        
        /// <remarks/>
        Shipping_Payment_Type,
        
        /// <remarks/>
        Shipping_Insurance,
        
        /// <remarks/>
        Distribition_Center,
        
        /// <remarks/>
        Dist_Center_Ship_to_Code,
        
        /// <remarks/>
        External_No,
        
        /// <remarks/>
        Effective_Date,
        
        /// <remarks/>
        Open_Date,
        
        /// <remarks/>
        Close_Date,
        
        /// <remarks/>
        Change_Date,
        
        /// <remarks/>
        EDI_Internal_Doc_No,
        
        /// <remarks/>
        Dist_Center_Ext_Code,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo EShipTo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateMultipleCompletedEventHandler(object sender, CreateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo[] EShipTo_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo EShipTo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EShipTo[] EShipTo_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EShipTo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591